import lxml
from lxml import html
import requests
import numpy as np
import pandas as pd

url_tickers = 'https://www.macrotrends.net/assets/php/ticker_search_list.php' 
page_tickers = requests.get(url_tickers)

json_data = page_tickers.json()
df_tickers = pd.DataFrame(json_data)
new = df_tickers['s'].str.split("/", n = 1, expand = True) 
df_tickers['Ticker'] = new[0]
df_tickers['Company'] = new[1]
#df_tickers

ticker = 'IBM'
company_name = 'ibm'
report = ['revenue', 'cost-goods-sold', 'gross-profit', 
          'research-development-expenses', 'selling-general-administrative-expenses',
         'operating-expenses', 'total-non-operating-income-expense',
         'pre-tax-income', 'total-provision-income-taxes', 'income-after-taxes',
         'income-from-continuous-operations', 'income-from-discontinued-operations',
         'net-income', 'ebitda', 'ebit','basic-shares-outstanding', 'shares-outstanding',
         'eps-basic-net-earnings-per-share', 'eps-earnings-per-share-diluted', 'total-assets',
         'total-liabilities', 'total-share-holder-equity', 'total-liabilities-share-holders-equity']
df = pd.DataFrame(columns=['Time','Value', 'Period', 'Description', 'Variable', 'Ticker', 'Company'])

for parameter in report:
    url = 'https://www.macrotrends.net/stocks/charts/'+ticker+'/'+company_name+'/'+parameter
    page = requests.get(url)
    tree = html.fromstring(page.content)
    table = tree.xpath('//table') 
    tstring_A = lxml.etree.tostring(table[0], method='html')
    tstring_Q = lxml.etree.tostring(table[1], method='html')

    df_A = pd.read_html(tstring_A)[0]
    df_A['Period'] = 'A'
    df_A['Description'] = df_A.columns[0]
    df_A['Variable'] = 'Revenue'
    df_A['Ticker'] = ticker
    df_A['Company'] = company_name
    df_A.rename(columns={df_A.columns[0]:'Time', df_A.columns[1]:'Value'}, inplace=True)

    df_Q = pd.read_html(tstring_Q)[0]
    df_Q['Period'] = 'Q'
    df_Q['Description'] = df_Q.columns[0]
    df_Q['Variable'] = 'Revenue'
    df_Q['Ticker'] = ticker
    df_Q['Company'] = company_name
    df_Q.rename(columns={df_Q.columns[0]:'Time', df_Q.columns[1]:'Value'}, inplace=True)

    df = df.append(df_A, ignore_index=True)
    df = df.append(df_Q, ignore_index=True)
df['Currency'] = 'USD'
df['Value_Numeric'] = pd.to_numeric(df['Value'].str.replace(',', '', regex=True).str.replace('$', '', regex=True))
